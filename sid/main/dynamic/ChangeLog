2013-09-23  Alan Modra  <amodra@gmail.com>

	* configure.in (AC_CONFIG_AUX_DIR): Specify top dir.
	* Makefile.am (ACLOCAL_AMFLAGS): Add -I top dir.
	* Makefile.in, aclocal.m4, config.in, configure: Regenerate.

2009-04-30  DJ Delorie  <dj@redhat.com>

	* mainDynamic: Regenerate.
	* mepCfg.cxx (MepBoardCfg::set_ivc2_decode): New.
	* mepCfg.h (MepBoardCfg::set_ivc2_decode): Add.

2009-04-08  DJ Delorie  <dj@redhat.com>

	* mainDynamic.cxx: Add C5 support.
	* mepCfg.cxx: Connect write-hint pin.
	* mepCfg.h: Add C5 support.

2009-02-03  DJ Delorie  <dj@redhat.com>

	* mepCfg.cxx (MepMemCfg): Update to new MeP configuration.
	* mainDynamic.cxx (mk_sample): Update to new MeP configuration.

2008-06-17  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (usage): Document --reversible.
	(try_add_memory): Call sess->add_memory.
	(option_num): add opt_reversible.
	(long_options): Add "reversible".
	(main): Handle opt_reversible.
	* commonCfg.h (set_reversible): New method of SessionCfg.
	(add_memory): Likewise.
	(reversible_p): New member of SessionCfg.
	(memory): Likewise.
	* commonCfg.cxx (CpuCfg): Establish sim-sched relation.
	(SessionCfg): Initialize reversible_p.
	(SessionCfg::write_load): Set up all memory regions as reversible,
	if requested.
	(BoardCfg::write_config): Set up the cpu to be reversible, if
	requested.

2007-11-06  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepBoardCfg): Set the gloss component's
	syscall-numbering-scheme attribute to "mep".

2007-02-19  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepMemCfg::set_dynamic_config): Relate the gbmif as a
	client of the dynamic_configurator if it exists.
	(MepBoardCfg::map_mm_int): Removed.
	(MepBoardCfg::write_load): Call set_model_busses, if necessary.
	(MepBoardCfg::write_config): Call shared_main_mem->mep_mm_int, if
	necessary. Relate the gbif and lbif clients of the dynamic_configurator
	if they exist and may be wrapped.
	* commonCfg.cxx (SessionCfg): Initialize maybe_model_busses.
	(profile_config): Set maybe_model_busses, if necessary.
	* commonCfg.h (maybe_model_busses): New member of SessionCfg.

2007-02-05  Dave Brolley  <brolley@redhat.com>

	* Contribute the following changes:
	2006-09-14  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (get_local_shadow_bit_insn_probe): New method of MepBoardCfg.
	(shadow_covers_local_region): New method of MepBoardCfg.
	(local_shadow_bit_insn_probe): New member of MepBoardCfg.
	* mepCfg.cxx (map_boards): Call map_imem_dmem for each board here...
	(setup_memory_map): ... not here. Connect a probe to any mappings
	of local shadows onto another module's dmem in order to monitor
	access by bit insns.
	(MepCacheCfg): bit_insn_probes array is now a scalar, bit_insn_probe.
	(MepCacheCfg::configure): Connect bit_insn_probe's downstream accessor
	to the cache, if it exists.
	(cache): Insert bit_insn_probe into the mapping of any cached regions,
	if it exists. Remove instance which takes a second argument.
	(need_bit_insn_probe): Renamed from need_bit_insn_probes. Now creates
	only one probe.
	(MepBoardCfg): Initialize local_shadow_bit_insn_probe.
	(configure_dcache): Do not insert a probe to monitor access to cache tag
	and data areas.
	(shadow_covers_local_region): Multiply imem_size by 1024 when testing the
	imem range. Now takes a 5th argument which is a reference to a bool
	indicating whether the memory range covered is dmem.
	(write_load): If opt_bit_p is set, create local_shadow_bit_insn_probe.
	(MepMemRegionCfg): Use make_numeric_attribute and pass std::ios::hex.
	(mep_imem_dmem): Likewise.

	2006-08-29  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (MepBoardCfg::write_load): New method.
	(dmem_probes): New member of MepBoardCfg.
	(opt_bit_p): New member of MepBoardCfg.
	* mepCfg.cxx (MepCacheCfg): Initizlize bit_insn_probes.
	(MepCacheCfg::configure): Connect the bit insn probes to main memory,
	if they exist.
	(MepCacheCfg::pass): New variant for passing a region with probing.
	(need_bit_insn_probes): New method of MepCacheCfg.
	(bit_insn_probes): New member of MepCacheCfg.
	(opt_bit_p): New member of MepBoardCfg.
	(configure_dcache): If opt_bit_p is set, pass the cache line area and cache
	tag area with probing.
	(map_imem_dmem): If opt_bit_p is set, set up a bus probe for the dmem regions.
	(MepBoardCfg::write_load): New method.
	(set_opt_bit): Set opt_bit_p.

	2005-06-30  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (num_boards): New method of MepMemCfg.
	(irq_specs): New static member of MepBoardCfg.
	(MepBoardCfg::write_config): Call configure_irqs. Don't clear
	mep_peripherals. Use a static flag to process peripherals only once.
	(add_irq): Just add the spec to irq_specs.
	(configure_irqs): New method of MepBoardCfg.
	(configure_irq): New method of MepBoardCfg.
	* mepCfg.h (MepIrq): New struct type in MepBoardCfg.
	(configure_irqs): New method of MepBoardCfg.
	(configure_irq): New method of MepBoardCfg.

	2005-06-06  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (main): Add " --model-busses" to board_start_config instead of
	" --model_busses" (typo).
	* mepCfg.cxx (MepCacheCfg::set_dynamic_config): Check whether my_cache
	is wrapped before connecting it to the dynamic_configurator.
	(MepBoardCfg): Relate cpu to insn_buffer.
	(configure_icache): Don't set our loader member here. Use automatic
	temp, the_loader.
	(configure_dcache): Likewise.
	(MepBoardCfg::write_config): Connect the downstream-passthrough pin
	to the correct passthrough pin on the gbmif. Set the cpu's
	step-insn-count-1-required attribute. Check whether insn-buffer is
	wrapped before connecting it to the dynamic configurator. Likewise
	for the dmac, hardware engines and peripherals.

	2005-05-29  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (set_dynamic_config): New method of mepCacheCfg.
	(mepBoardCfg::write_config): Make connections and set attributes to
	allow dynamic reconfiguration of mep components.

	2005-04-22  Richard Sandiford  <rsandifo@redhat.com>

	* mepCfg.cxx (MepMemCfg::MepMemCfg, MepBoardCfg::MepBoardCfg)
	(MepBoardCfg::add_memory, MepBoardCfg::configure_icache)
	* mainDynamic.cxx, mepCfg.cxx: Apply automatic MeP-Integrator changes.

	2005-02-24  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (MEP_CORE_C4): New macro.
	* mepCfg.cxx (map_imem_dmem): Don't check core type when checking
	dmem_fixed_start_address.
	(write_config): Likewise.

	2005-01-14  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (usage): Document --model-busses.

	2004-12-07  Dave Brolley  <brolley@redhat.com>

	* commonCfg.h (set_opt_gbif): Removed.
	(set_opt_lbif): Removed.
	(set_opt_gbmif): Removed.
	* mainDynamic.cxx (usage): Removed description of --gbif, --lbif and
	--gbmif.
	(Defs): Removed gbmif.
	(option_num): Remove opt_gbif, opt_lbif and opt_gbmif.
	(long_options): Remove gbif, lbif and gbmif.
	(main): Remove default for gbmif. Remove handling of opt_gbif,
	opt_lbif, opt_gbmif.
	* mepCfg.cxx (MepBusArbitratorCfg): Now takes second argument for type.
	(gbmif_type): New member of MepMemCfg.
	(set_opt_gbmif): Removed from MepMemCfg and MepBoardCfg.
	(add_toshapi_gbmif): Renamed to add_toshapi_global_bus_model. Now sets
	gbmif_type.
	(MepBoardCfg): gbif_name and lbif_name renamed to gbif_type and
	lbif_type respectively.
	(add_toshapi_gbif): Renamed to add_toshapi_global_bus_if_model.
	(add_toshapi_lbif): Renamed to add toshapi_local_bus_model.
	(set_core_id): Update curr_core_id.
	(set_opt_gbif): Removed from MepBoardCfg.
	(set_opt_lbif): Removed from MepBoardCfg.
	* MepCfg.h (add_toshapi_gbmif): Renamed to add_toshapi_global_bus_model.
	(MepBoardCfg): gbif_name and lbif_name renamed to gbif_type and
	lbif_type respectively.
	(add_toshapi_gbif): Renamed to add_toshapi_global_bus_if_model.
	(add_toshapi_lbif): Renamed to add toshapi_local_bus_model.
	(set_opt_gbmif): Removed from MepMemCfg and MepBoardCfg.
	(set_opt_gbif): Removed from MepBoardCfg.
	(set_opt_lbif): Removed from MepBoardCfg.
	(gbif_map): Removed from MepBoardCfg.
	(lbif_map): Removed from MepBoardCfg.

	2004-11-08  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg): Initialize data_width.
	(MepCacheCfg::configure): Set data-width attributeof the cache.
	(set_data_width): New method of MepCacheCfg.
	(data_width): New member of MepCacheCfg.
	(configure_icache): Call icache->set_data_width.
	(configure_dcache): Call dcache->set_data_width.
	(MepBoardCfg::write_config): Set the data-width attribute of the
	insn_buffer.
	* commonCfg.cxx (GprofCfg): Check the initial substring of comp_type ()
	not the entire string.

	2004-11-02  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg::configure): Connect the cache's
	"operation-status" pin to the cpu's "cache-operation-status" pin.

	2004-10-28  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (mep_boards): Only connect gbmif's global-bus-lock to the
	board's gbif global-bus-slave-lock if the board has a gbif.
	(MepBoardCfg::set_model_busses): Set insn_count_1.
	(MepBoardCfg::set_opt_gbmif): Don't call set_model_busses.

	2004-10-22  Dave Brolley  <brolley@redhat.com>

	* commonCfg.h (set_opt_gbif): New method of BoardCfg.
	(set_opt_lbif): New method of BoardCfg.
	(set_opt_gbmif): New method of BoardCfg.
	* mepCfg.h (MepBusArbitratorCfg): New class.
	(set_opt_gbmif): New method of MepMemCfg and MepBoardCfg.
	(add_toshapi_gbmif): New method of MepMemCfg.
	(add_toshapi_gbif): New method of MepBoardCfg.
	(add_toshapi_lbif): New method of MepBoardCfg.
	(set_opt_gbif): New method of MepBoardCfg.
	(set_opt_lbif): New method of MepBoardCfg.
	(gbif_name,lbif_name): New members of MepBoardCfg.
	(gbif_map,lbif_map): Ditto.
	* mepCfg.cxx (MepBusArbitratorCfg): New class.
	(map_global_memory): Set latency of memory to 1 cycle if modelling
	busses.
	(setup_memory_map): Adjust base address of local memory if mapping
	via the lbif.
	(set_opt_gbmif): New method of MepMemCfg and MepBoardCfg.
	(add_toshapi_gbmif): New method of MepMemCfg.
	(set_model_busses): Create MepBusArbitratorCfg. Connect the gbmif to the
	global bus here.
	(MepCacheCfg): Map the "total-latency?" attribute the the cache.
	(MepBoardCfg): Initialize gbif_name and lbif_name.
	(add_toshapi_gbif): New method of MepBoardCfg.
	(add_toshapi_lbif): New method of MepBoardCfg.
	(MepBoardCfg::write_config): Set the "total-latency?" attribute of
	the caches here.
	(set_opt_gbif): New method of MepBoardCfg.
	(set_opt_lbif): New method of MepBoardCfg.
	* mainDynamic.cxx (usage): Describe --gbif, --lbif and --gbmif.
	(Defs): New member gbmif.
	(option_num): Add opt_gbif, opt_lbif and opt_gbmif.
	(long_options): Add gbif, lbif and gbmif.
	(main): Propogate default for gbmif to boards. Handle opt_gbif,
	opt_lbif, opt_gbmif.

	2004-10-12  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepMemCfg): Initialize gbmif.
	(map_global_memory): Set the "ports" attribute of the gbmif.
	(map_boards): Connect the gbmif's "global-bus-lock" pin to the
	"global-bus-slave-lock" pin of each gbif.
	(setup_memory_map): Map local shadows to the global-bus-slave-interface
	of the gbif, if specified. Don't use a base address when mapping local
	shadows onto the lbif. Connect the gbmif's "global-bus" to the global
	mapper.
	(set_model_busses): Move the implementation out of the class
	declaration.
	(MepCacheCfg): Map the downstream-lock pin from the cache component.
	(set_loader): Connect the dmac's "check-address" pin to the "probe" pin.
	(set_model_busses): Schedule the gbif and the lbif.
	(MepBoardCfg::write_config): Connect the gbif to the gbmif. Connect
	the downstream-lock pins for all blockable and arbitrating components.
	Set up the dmac as a blockable component.
	(configure_dmac): Connect the dmac to the gbif and lbif if specified.

	2004-09-16  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (MepBoardCfg::set_model_busses): New virtual method.
	(gbif,lbif): New members of MepBoardCfg.
	* mepCfg.cxx (MepMemCfg): Initialize model_busses.
	(MepMemCfg::setup_memory_map): Map global memory through the GBIF if
	necessary. Connect the GBIF and LBIF to downstream objects if
	necessary.
	(MepMemCfg::set_model_busses): New method.
	(MepMemCfg::model_busses_p): New method.
	(MepMemCfg::model_busses): New member.
	(map_peripheral): Map peripheral memory through the GBIF if necessary.
	(map_mm_int): Ditto for mm_int memory..
	(MepCacheComponentCfg): Inherit from BlockingCacheCfg.
	(MepCacheCfg): Map attributes "name", "blockable?", "ulog-*",
	"buffer-output" from my_cache.
	(MepBoardCfg): Initialize gbif and lbif. Construct insn_buffer using
	BlockingCacheCfg.
	(MepBoardCfg::set_model_busses): New virtual method.
	(MepBoardCfg)::map_local_mem): Map local memory through the GBIF if
	necessary.
	(MepBoardCfg::write_config): Set up the cpu, gbif, lbif, insn_buffer,
	icache and dcache as blockable is specified.
	* mainDynamic.cxx (model_busses): New member of Defs.
	(opt_model_busses): New member of option_num.
	(long_options): Add model-busses.
	(main): Set default for --model-busses. Handle opt_model_busses.

	2005-07-29  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (set_cop_ccr): New method of MepBoardCfg.
	* mepCfg.h (set_cop_ccr): Likewise.

	2004-08-20  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (configure_dmac): Connect the dmac's "error" pin to main's
	"stop!" pin and yield-net's "input" pin.

	2004-08-16  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (GprofCfg): Connect the cpu's "sample-gprof" pin to
	the gprof's "sample" pin for instruction_count mode of sampling.
	* mepCfg.cxx (write_config): Don't set the gprof's "bucket-size" here.

	2004-08-11  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheTagMemCfg): Don't initialize read_latency
	and write_latency for MemCfg.
	(MepCacheCfg): Ditto for "data-test-mem".

	2004-07-22  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepBoardCfg::write_config): Correct DRBN value for the
	case of no DMEM.

	2004-07-20  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg::configure): connect "cache-invalidate" to
	"clear-tag".

	2004-06-24  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (MEP_CORE_MEP, MEP_CORE_H1): New macros.
	(MEP_CORE_UNKNOWN): Removed.
	(set_dmem_fixed_start_address): New method.
	(set_opt_dmem_fixed_start_address): New method.
	* mepCfg.cxx (MepCacheCfg): Set latency of data_test_mem to be 10
	cycles.
	(MepCacheCfg::configure): Connect the cpu's insn-cache-invalidate-all
	pin, data-cache-invalidate-all pin and cache-prefetch pin.
	(MepDSUCfg): Now takes a core_type argument. Use it to set the range
	of the DSU registers on the control bus.
	(MepBoardCfg): Initialize core_type to MEP_CORE_MEP. Initialize
	dmem_fixed_start_address.
	(set_dmem_fixed_start_address): New method.
	(set_opt_dmem_fixed_start_address): New method.
	(map_imem_dmem): Only compute imem/dmem bases if they are configured.
	(MepBoardCfg::write_config): Set the dsu's core-type attribute.
	Handle dmem_fixed_start_address.
	(need_dsu): Pass core_type to MepDSUCfg.
	* mainDynamic.cxx (usage): Document --dmem-[no-]fixed-start-address.
	(option_num): Add dmem_[no_]fixed_start_address.
	(long_options): Add dmem-[no-]fixed-start-address.
	(main): Handle dmem_[no_]fixed_start_address.
	* commonCfg.h (BoardCfg): New virtual method
	set_opt_dmem_fixed_start_address.

	2004-06-24  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg): Don't connect "invalidate-all" pin to the
	init-sequence.
	(MepBoardCfg): Initialize corrupt_caches.
	(MepBoardCfg::write_config): set the cpu's "corrupt-caches" attribute.
	* mainDynamic.cxx (usage): Document --corrupt-caches.
	(Defs): New member: corrupt_caches.
	(opt_corrupt_caches): New member of option_num.
	(long_options): Add "corrupt-caches".
	(main): Handle opt_corrupt_caches.
	* mepCfg.h (set_corrupt_caches): New virtual method of MepBoardCfg.
	(corrupt_caches): New member of MepBoardCfg.
	* commonCfg.h (set_corrupt_caches): New virtual method of BoardCfg.

	2004-04-29  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg::configure): Move the setting of tag_test_mem
	attributes to here from the constructor.
	* mep-cache.{cxx,h}: New files.

	2004-04-29  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (MepBoardCfg::set_endian): New specialization.
	(endianness): New member of MepBoardCfg.
	* mepCfg.cxx (MepCacheComponentCfg): New class.
	(MepCacheTagMemCfg): New class.
	(MepCacheCfg): Use new classes above. Allocate and map cache data/tag
	test memory. No more tag_test_probe. Caches read tags from mapped
	memory.
	(MepCacheCfg::get_size): Removed.
	(MepCacheCfg::set_endianness): New method.
	(MepBoardCfg): Initialize core_type to MEP_CORE_UNKNOWN.
	(MepBoardCfg::set_endian): New specialization.
	(MepBoardCfg::configure{i,d}cache): Get loader from the session if the
	board doesn't have its own. Call {i,d}cache->set_endianness based on
	the loader.

	2004-04-08  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (hw_engines): New member of MepBoardCfg.
	* mepCfg.cxx (MepBoardCfg): Initialize hw_engines.
	(add_hw_engine): Don't set the cpu's hwe-option? attribute here. Just
	count the hardware engine.
	(add_toshapi_hw_engine): Ditto.
	(add_toshapi_dsp, add_toshapi_uci): Don't count as a hardware engine.
	(write_config): Set the cpu's hwe-option? attribute here based on
	hw_engines.

	2004-04-01  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (MEP_CORE_*): New macros.
	(add_dsp): New argument: dmem_if_width.
	(add_toshapi_dsp): Ditto.
	(set_core_type): New method of MepBoardCfg.
	(set_icache_cwf): New method of MepBoardCfg.
	(set_dcache_cwf): New method of MepBoardCfg.
	(set_opt_icache_cwf): New method of MepBoardCfg.
	(set_opt_dcache_cwf): New method of MepBoardCfg.
	* mepCfg.cxx (MepCacheCfg): New parameter: cwf. New members: my_cwf,
	my_way.
	(set_way): Set this->my_way.
	(set_cwf): New method of MepCacheCfg.
	(get_size): Ditto.
	(get_way): Ditto.
	(get_line_size): Ditto.
	(get_cwf): Ditto.
	(MepBoardCfg): Initialize core_type.
	(add_dsp): New argument: dmem_if_width. Set the cpu's
	"dsp-dmem-if-width" attribute.
	(add_toshapi_dsp): Ditto.
	(set_core_type): New method of MepBoardCfg.
	(need_icache): Call MepCacheCfg with new argument list.
	(need_dcache): Call MepCacheCfg with new argument list.
	(set_icache_cwf): New method of MepBoardCfg.
	(set_dcache_cwf): New method of MepBoardCfg.
	(MepBoardCfg::write_config): Use core_type to set the ID.ID field. Set
	new fields for c3 fore in CCFG.
	(set_opt_icache_cwf): New method of MepBoardCfg.
	(set_opt_dcache_cwf): New method of MepBoardCfg.
	* mainDynamic.cxx (usage): Document --icache-line-size, --icache-way,
	--icache-cwf options. Also same options for dcache.
	(option_num): New enumerators opt_icache_line_size, opt_icache_way,
	opt_icache_cwf. Same for dcache.
	(long_options): Add icache-line-size, icache-way and icache-cwf.
	Same for dcache.
	(main): Handleopt_icache_line_size, opt_icache_way, opt_icache_cwf.
	Same for dcache.
	* commonCfg.h (set_opt_icache_cwf): New method of BoardCfg.
	(set_opt_dcache_cwf): New method of BoardCfg.

	2004-03-30  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg): New parameter: way. Call set_way.
	(add_toshapi_dsp): Call conn_pin for "dsp-arg4" and "dsp-arg7".
	(add_toshapi_uci): Call conn_pin for "uci-arg4".
	(need_icache): Pass default setting of 1 for 'way'.
	(need_dcache): Pass default setting of 1 for 'way'.
	(set_opt_{icache,dcache}_{linesize,way}): New methods of MepBoardCfg.
	(set_{icache,dcache}_{linesize,way}): New methods of MepBoardCfg.
	* commonCfg.h (set_opt_{icache,dcache}_{linesize,way}): New methods of
	BoardCfg.
	* mepCfg.h: Ditto for MepBoardCfg.

	2004-03-22  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (shared_dsp_log): Removed.
	(add_toshapi_dsp): Connext the dsp's "dsp-log-out" pin to the cpu's
	"trace" pin.
	* mepCfg.h (shared_dsp_log): Removed.

	2004-03-09  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_toshapi_dsp): Set cpu's "hwe-option?" to false.
	(add_toshapi_uci): Ditto.

	2004-02-23  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (add_dmac): No longer takes irq_dmac argument.
	(set_config_index): New virtual method of BoardCfg.
	(set_opt_dmac_irq): Removed.
	(config_index): New member of MepBoardCfg.
	(dmac_irq): Removed.
	* mepCfg.cxx (MepBoardCfg): Initialize config_index. Remove
	initialization of dmac_irq.
	(add_hw_engine): set the cpu's "hwe_option?" attribute.
	(add_toshapi_hw_engine): Ditto.
	(MepBoardCfg::write_config): Set the cpuj's "config-index" attribute.
	ID.ID is now 0x2.
	(add_dmac): No longer takes irq_dmac argument.
	(configure_dmac): Remove check of dmac_irq.
	(add_exit_location): Add memory to the exit-watchdog so that it doesn't
	return sid::status::unmapped when accessed.
	(set_opt_dmac_irq): Removed.
	(irq_dmac): Removed.
	(add_irq): Remove handling of irq_dmac.
	* mainDynamic.cxx (usage): Remove description of --dmac-irq and
	--dmac-no-irq.
	(option_num): Remove opt_dmac_irq and opt_dmac_no_irq.
	(main): Call curr_board->set_config_index. Remove handling of
	opt_dmac_irq and opt_dmac_no_irq.
	* commonCfg.h (set_config_index): New virtual method of BoardCfg.
	(opt_dmac_irq): Removed.

	2004-02-17  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_timer): Check that timer has been allocated.

	2004-02-16  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (set_dsp_user_out): New virtual method of BoardCfg.
	(dsp_user_out): New member of MepBoardCfg.
	* mepCfg.cxx (dsp_user_out): New member of MepBoardCfg.
	(MepBoardCfg::write_config): Set "dsp-user-out-option?" in the
	cpu and "user-out" in each dsp.
	* mainDynamic.cxx (usage): Document --[no-]dsp-user-out.
	(dsp_user_out): New member of Defs. Initialize it.
	(option_num): Add opt_dsp_user_out and opt_no_dsp_user_out.
	(load_options): Add "dsp-user-out" and "no-dsp-user-out".
	(main): Use default setting of dsp_user_out if specified.
	Handle opt_dsp_user_out and opt_no_dsp_user_out.
	* commonCfg.h (set_dsp_user_out): New virtual method of BoardCfg.

	2004-02-09  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepMemCfg): Initialize insn_count_1.
	(insn_count_1_required): New method of MepBoardCfg.
	(insn_count_1): New member of MepBoardCfg.
	(add_peripheral): Set insn_count_1.
	(add_toshapi_peripheral): Ditto.
	(add_hw_engine, add_toshapi_hw_engine): Ditto.
	(MepBoardCfg): initialize insn_count_1 and step_insn_count.
	(MepBoardCfg::write_config): Call set_step_insn_count if required.
	(trace_counter): New virtual method of MepBoardCfg.
	(set_step_insn_count): Ditto.
	(insn_count_1_required): Ditto.
	* mepCfg.h (trace_counter): New virtual method of MepBoardCfg.
	(set_step_insn_count): Ditto.
	(step_insn_count, insn_count_1): New members of MepBoardCfg.
	(step_insn_count_1_required): New method of MepBoardCfg.

	2004-02-03  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (set_channels): New method of MepTimerCfg.
	(MepBoardCfg): Remove timer_channel_bitw.
	(add_timer): Pass channel_bitw to allocate_timer and call
	timer->set_channels.
	(allocate_timer): Now takes channel_bitw_argument.
	(configure_timer): Use timer->get_channels.
	(configure_dmac): Ditto.
	* mepCfg.h (allocate_timer): Now takes channel_bitw_argument.
	(MepBoardCfg): Remove timer_channel_bitw.

	2004-01-30  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_toshapi_dsp): Call set_opt_dsp.

	2004-01-26  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (allocate_timer, configure_timer): New methods of MepBoardCfg.
	(set_opt_timer_channel_bitw): New method of MepBoardCfg.
	(timer_channel_bitw): New member of MepBoardCfg.
	* mepCfg.cxx (MepBoardCfg): Initialize timer_channel_bitw.
	(set_dmem_bank_num): Allow dmem_bank_num to be set to zero.
	(map_imem_dmem): Correct fmem_base_address for case of no dmem.
	Initialize dmem_base[0].
	(MepBoardCfg::write_config): Call configure_timer. Move setup of timer
	interrupt pins to configure_timer. Handle case where dmem_bank_num is
	zero.
	(add_timer): Move allocation, scheduling and connection of timer to
	allocate_timer and configure_timer.
	(allocate_timer, configure_timer): New methods of MepBoardCfg.
	(configure_dmac): Use timer_channel_bitw.
	(set_opt_timer_channel_bitw): New method of MepBoardCfg.
	* mainDynamic.cxx (usage): Document --timer-channel-bitw.
	(option_num): Add opt_timer_channel_bitw.
	(long_options): Add timer-channel-bitw.
	(main): Handle opt_timer_channel_bitw.
	* commonCfg.h (set_opt_timer_channel_bitw): New prototype.

	2003-01-28  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_timer): Connect the timer's nmi pin to the cpu's
	nmi pin.

	2003-01-23  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepTimerCfg): Remove 'ctrlmap' and 'cpu'. Add
	'channel-bitw'.
	Initialize 'channels' with 'channel_bitw'.
	(add_timer): Call MepTimerCfg with channel_bitw.
	(add_dmac): Connect output pins to the intc interrupt-source-N and
	above, where N is the number of timer channels.

	2003-01-13  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepMemCfg::map_mm_int): Now takes mm_int as an
	argument.
	(MepBoardCfg::map_mm_int): New method.
	* MepCfg.h (MepBoardCfg::map_mm_int): New method.

	2002-12-10  D. Marlin  <dmarlin@redhat.com>

	* baseCfg.h : Added a typedef for gprof_type.
	* commonCfg.h : Added type and interval parameters to GprofCfg class interface
	and set_gprof method prototype.
	* commonCfg.cxx (GprofCfg::GprofCfg): Added type and interval to GprofCfg class.
	Modified constructor to support data collection based on simulated cycles.
	(BoardCfg::set_gprof): Added type and interval parameters.
	* mainDynamic.cxx (usage): Added 'cycles=N' suboption to --gprof.
	(try_add_gprof): New method.
	(main): Added call to try_add_gprof.

	2002-12-09  D. Marlin  <dmarlin@redhat.com>

	* mepCfg.h:  Changed imem to have two banks instead of one.
	Added dmem_bank_num configurable member.
	Changed dmem to use an array of four (dmem[4]) instead of two static
	banks (dmem0 and dmem1).
	Removed prototypes for methods to set_[icache|dcache]_[way|line_size]
	* mepCfg.cxx : Removed methods to set_[icache|dcache]_[way|line_size]
	(set_imem_size): Changed to initialize two banks.
	(set_dmem_bank_num): Added new method to set the number of dmem banks.
	(set_dmem_size):  Changed to initialize two to four banks, depending
	on the number of banks configured (dmem_bank_num).
	(MepBoardCfg::write_config):  Changed to emit the bank specifiers for two imem
	banks and two to four dmem banks.
	Modified the way the dmem bank specifiers are determined to use a table based
	on the data in the architecture manual.
	Updated rcfg register configuration for new format.

	2002-11-29  Ben Elliston  <bje@redhat.com>

	* commonCfg.h (BoardCfg::final_insn_count): Declare.
	* commonCfg.cxx (BoardCfg::final_insn_count): Implement.
	* mainDynamic.cxx (usage): Document --final-insn-count.
	(Defs::final_insn_count): New option flag.
	(Defs::Defs): Initialise it.
	(enum option_num): Add opt_final_insn_count.
	(long_options): Add --final-insn-count.
	(main): Process opt_final_insn_count.

	2002-11-26  Ben Elliston  <bje@redhat.com>

	* mepCfg.h (MepBoardCfg::add_exit_location): Declare member.
	* mepCfg.cxx (MepBoardCfg::add_exit_location): Implement.

	2002-11-22  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_timer): Set the cpu's num-timer-channels attribute.
	(set_opt_biu): New method of  MepBoardCfg.
	* mepCfg.h (set_opt_biu): New method of  MepBoardCfg.

	2002-11-21  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepTimerCfg): New class.
	(MepBoardCfg): Initialize timer.
	(add_timer): New method of MepBoardCfg.
	* mepCfg.h (add_timer): New method of MepBoardCfg.
	(timer): New member of MepBoardCfg.

	2002-11-19  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_dsp): Change first parameter name to "name" and use it
	in the name of the memory for the cbus interface.
	(add_cop): New method of MepBoardCfg.
	* mepCfg.h (add_cop): New method of MepBoardCfg.

	2002-11-19  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (add_dsp): New method of MepBoardCfg.
	* mepCfg.h (add_dsp): New method of MepBoardCfg.

	2002-11-15  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepMM_INT_Cfg): New class.
	(add_mm_int): New method of MepMemCfg.
	(map_mm_int): Ditto.
	(channels): New member of MepINTCCfg.
	(get_channels): New methos of MepINTCCfg.
	(MepBoardCfg): Call allocate_mm_int to initialize shared_mm_int.
	(need_mm_int): New method of MepBoardCfg.
	(need_icache): Pass mm_int region.
	(need_dcache): Ditto.
	(allocate_mm_int): New method of MepBoardCfg.
	(write_config): Connect MM_INT pins to the INTC.
	* mepCfg.h (MepMM_INT_Cfg): New class.
	(shared_mm_int): New member of MepMemCfg.
	(need_mm_int): New method of MepBoardCfg.
	(allocate_mm_int): New method of MepBoardCfg.

	2002-11-11  Frank Ch. Eigler  <fche@redhat.com>

	* baseCfg.h: Add `using namespace std' clause.

	2002-11-08  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx: Move MepCacheCfg to before MepMemCfg so that it can be
	used by MepMemCfg. Add markers for peripherals and peripheral-mappings.
	(add_peripheral): New method of MepMemCfg.
	(map_peripheral): New method of MepMemCfg.

	2002-10-09  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (add_dmac): New method.
	(need_dmac): Removed.
	(set_opt_dmac): Removed.
	(dmac): Now of type AtomicCfg *.
	* mepCfg.cxx: Remove class MepDMACCfg.
	(add_dmac): New method of MepBoardCfg replaces need_dmac and MepDMACCfg.
	(set_opt_dmac): Removed.

	2002-10-02  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepDMACCCfg): Use new control register mapping.

	2002-09-26  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h: Rename 'global' to 'global_mapper'.  Rename 'localmap'
	to local_mapper.
	(imem_dmem_base): New constant.
	(imem_dmem_size): New constant.
	(add_local_mem): Now returns MemCfg *.
	(add_hw_engine): New parameters: lbus_if, lbus_addr, lbus_size.
	(get_lmem_address): New function.
	(local_mem_map): New mapping.
	* mepCfg.cxx: Rename 'global' to 'global_mapper'.  Rename 'localmap'
	to local_mapper. Fix Diagram of memory heirarchy.
	(MepBoardCfg): Initialize local_mem_map.  Use localmem_base and
	imem_dmem_size.
	(add_local_mem): Now returns MemCfg *.  Always specify memory size.
	Pass new memory region through the caches.
	(get_lmem_address): New function.
	(add_hw_engine): New parameters: lbus_if, lbus_addr, lbus_size.
	Connect the hw_engine to the specified local memory regions.
	(need_icache): Use localmem_base and imem_dmem_size.
	(need_dcache): Ditto.

	2002-07-23  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepBoardCfg): Call new variant of GlossCfg.
	(write_config): Connect the gloss target-memory to the dcache mapper
	if available, otherwise to the main-mapper.
	* commonCfg.h (GlossCfg): New constructor.
	* commonCfg.cxx (GlossCfg): New constructor.

	2002-07-19  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg): Allocate cache of correct size. Allocate
	cache test areas of correct size.

	2002-07-16  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepCacheCfg): Connect cache-flush-and-invalidate and
	cache-index-flush-and-invalidate pins to the appropriate cache pins.

	2002-06-13  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.h (set_intc_level): New method.
	* mepCfg.cxx (set_intc_level): Configure interrupt levels.
	(MepINTCCfg::set_level): Set "cfg-interrupt-level".

	2002-06-11  Graydon Hoare  <graydon@redhat.com>

	* commonCfg.cxx (set_way): Add missing 'break' statement.

	2002-06-08  Ben Elliston  <bje@redhat.com>

	* mepCfg.cxx (mepCacheCfg::mepCacheCfg): Connect cache-flush,
	cache-invalidate, cache-index-flush, cache-index-invalidate pins
	to the data cache.

	2002-06-04  Graydon Hoare  <graydon@redhat.com>

	* mepCfx.cxx (MepCacheCfg): Connect probe in-line with tag test
	mapper.

	2002-06-04  Graydon Hoare  <graydon@redhat.com>

	* commonCfg.h (BoardCfg::add_memory): New method.
	* commonCfg.cxx (BoardCfg::add_memory): Call main_mapper->map.
	* mainDynamic.cxx (try_add_memory): Use BoardCfg::add_memory.
	* mepCfg.h (MepBoardCfg::add_memory): New method.
	* mepCfg.cxx (MepBoardCfg::add_memory): Also call
	{i,d}cache->pass.
	(MepGlobalMapperCfg): Rename from MepMapperCfg.

	2002-05-29  Ben Elliston  <bje@redhat.com>

	* commonCfg.h (CpuCfg::set_disasm_mem): New method.
	* commonCfg.cxx (CpuCfg::set_disasm_mem): Implement it.
	* mepCfg.cxx (MepBoardCfg::MepBoardCfg): Set disassembler-memory
	accessor to point to main mapper's access-port.

	2002-05-28  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (add_hw_engine): Connect to main, local memories.

	2002-05-27  Ben Elliston  <bje@redhat.com>

	* mepCfg.cxx (need_dcache): Specify a refill latency of 10.
	(set_dmem_size): Do not specify latencies (assume defaults of 0).
	(set_imem_size): Likewise.

	2002-05-21  Ben Elliston  <bje@redhat.com>

	* mepCfg.cxx (need_dcache): Enable write-allocate? attribute.
	(mepCacheCfg ctor): Add mapping for write-allocate? attribute.

	2002-05-21  Ben Elliston  <bje@redhat.com>

	* commonCfg.h (CacheCfg::set_refill_latency): New method.
	* commonCfg.cxx (CacheCfg::set_refill_latency): Implement it.
	* mepCfg.cxx (MepCacheCfg ctor): Invoke set_refill_latency() if a
	non-zero latency value is specified.
	(mepBoardCfg::need_icache): Specify a refill latency of 10.

	2002-05-16  Ben Elliston  <bje@redhat.com>

	* mepCfg.cxx (MepBoardCfg::need_icache): Set hit latency to 0.
	(MepBoardCfg::need_dcache): Likewise.

	2002-05-15  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (MepCacheCfg): Add tag-test regions.
	(MepBoardCfg): Remove un-necessary second layer from local memory;
	use .base() instead.
	* mepCfg.h (MepBoardCfg): Likewise.

	2002-05-13  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.h (MepBoardCfg): Add second layer to local memory
	hierarchy to permit DMA Controllers using 0-based addresses.
	* mepCfg.cxx (MepMemCfg): Likewise.
	(MepBoardCfg) Likewise.
	(MepBoardCfg) Add burst-event, burst-control pins during HW-Engine
	connection.

	2002-05-08  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (set_cop_data_bus_width): New function.
	* mepCfg.h (set_cop_data_bus_width): New function.

	2002-04-30  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (set_opt_cp): Set cp-option? rather than uci-option?
	* mepCfg.cxx (MepBoardCfg::write_config): Shift DRBA left 12 bits
	in rcfg (csr27).

	2002-04-29  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (MepMapperCfg): New class.
	(MepMemCfg): Use Mapping objects, MepMapperCfg.
	(MepCacheCfg): Use Mapping objects.
	(MepBoardCfg): Use Mapping objects.
	(MepBoardCfg::write_config): Correct dmem_size underflow for 1kb regions.
	(MepBoardCfg::need_icache): Add "always pass" regions for local memory.
	(MepBoardCfg::need_dcache): Add "always pass" regions for local memory.
	* mepCfg.h (MepBoardCfg): Make MepMemCfg a friend of MepBoardCfg.

	2002-04-19  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (add_hw_engine): Remove support for cbus_size.
	* mepCfg.h (MepBoardCfg::add_hw_engine): remove support for
	cbus_size.

	2002-04-15  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.h (MepBoardCfg): Add board type parameter to ctor
	signature.
	(MepBoardCfg): Remove obsolete main_passthru mapper.
	* mepCfg.cxx (MepMemCfg): Add global shadow configuration block.
	(MepMemCfg::setup_memory_map): Add local shadow configuration block.

	2002-04-15  Dave Brolley  <brolley@redhat.com>

	* mepCfg.h (add_local_mem): Add optional name parameter.
	(add_hw_engine): Add optional local_mem_list parameter.
	* mepCfg.cxx (sidmiscutil.h): #include it.
	(add_local_mem): Use the given name, if provided.
	(add_hw_engine): Relate this engine to the given local memory list.

	2002-04-09  Dave Brolley  <brolley@redhat.com>

	* mepCfg.cxx (MepMemCfg): Remove member 'shadow'.  Update comment
	describing the memory system.  Remove mappings involving 'shadow'.  Map
	global memory directly from 'main_mapper' to 'global'.  Map all shadows
	back onto 'main_mapper'.

	2002-03-30  Graydon Hoare  <graydon@redhat.com>

	* mainDynamic.cxx: Predicate portions on -D SIDTARGET_MEP.
	* Makefile.am: Add -D SIDTARGET_MEP to CXXFLAGS when configured
	with SIDTARGET_MEP.
	* Makefile.in: Regenerate.

	2002-03-24  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (need_icache): Transpose markers with need_dcache.
	(need_dcache): Likewise.
	(set_core_id): New function.
	(add_hw_engine): Correct bus range calculation.
	* mepCfg.h (MepBoardCfg::set_core_id): New prototype.

	2002-03-23  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (add_hw_engine): New function.
	* mepCfg.h (MepBoardCfg::add_hw_engine): New prototype.

	2002-03-23  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (need_icache): Add hooks for cache/pass settings.
	(need_dcache): Likewise.
	(add_local_mem): New function.
	* mepCfg.h (MepBoardCfg::add_local_mem): New prototype.

	2002-03-22  Graydon Hoare  <graydon@redhat.com>

	* commonCfg.cxx (MapperCfg): Permit switching between transparent
	and basic after construction.
	* commonCfg.h (MapperCfg): Likewise.
	* mepCfg.cxx (MepMemCfg): Rearrange to handle shadows and gmap
	local definitions.
	(main_passthru): Remove, make main_mapper transparent.
	(write_config): Use absolute addresses for local map.
	(set/get_module_type): New methods.

	2002-03-21  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (MepMemCfg): Add hooks for mepcfgtool to define
	global memory map.

	2002-03-18  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (MepBoardCfg): Extensive reworking to permit
	post-construction customization from factory methods in
	mainDynamic.cxx
	* mainDynamic.cxx (try_load_file): Add.
	(try_add_memory): Modify to work in non-board cases.
	* commonCfg.cxx (loaderCfg): Make configurable after construction.
	(CpuCfg): Add static name map like MapperCfg.
	(CacheCfg): Compute comptype dynamically.
	(MemCfg): Permit size adjustment after construction.
	(BoardCfg): Remove per-board loader logic, moved to mainDynamic.cxx.
	* commonCfg.h: Reflect above changes.
	* baseCfg.cxx: Change config graph path separator from "-" to "/".

	2002-03-12  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx (MepBoardCfg): Add cpu-option-customizations.

	2002-03-11  Frank Ch. Eigler  <fche@redhat.com>

	* commonCfg.cxx (add_mapping): Add raw string-spec argument.
	Correct other variants for new wordsz syntax.
	* mepCfg.cxx (MepCacheCfg): Take cpu parameter.  Connect to the
	FOO-cache-enable pins.  Add cached/uncached mapping banks.
	(MepBoardCfg): Reorganize cache mappings accordingly.
	* commonCfg.h: Corresponding changes.

	2002-02-27  Ben Elliston  <bje@redhat.com>

	* mepCfg.cxx (MepMemCfg::MepMemCfg): Set shared-mem memory
	regions' read/write latencies to {10, 1} respectively.
	(MepBoardCfg::MepBoardCfg): Set local memory latencies to {1, 1}
	and cache hit/miss latencies to {1, 3} respectively.

	* mainDynamic.cxx (usage): Condense and tidy output.

	2002-02-14  Graydon Hoare  <graydon@redhat.com>

	* commonCfg.cxx: Various small corrections to gdb and gloss
	coexistence.
	* commonCfg.h: Likewise.
	* mainDynamic.cxx: Likewise.
	* Makefile.am: Move mepCfg.cxx into a separate block.
	* Makefile.in: Regenerate.

	2002-02-08  Graydon Hoare  <graydon@redhat.com>

	* mepCfg.cxx: New file.
	* mepCfg.h: New file.

	2001-07-19  Ben Elliston  <bje@redhat.com>

	* Makefile.am (NEARBY_LIBS): Add libmepfamily.la.
	(NEARBY_DEP_LIBS): Likewise.

2006-11-30  Dave Brolley  <brolley@redhat.com>

	* Makefile.am (TARGETCFGS): Revert previous changes. Add shCfg.cxx
	unconditionally.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* configure: Regenerated.
	* shCfg.cxx: Protect the entire file with preprocessor conditional
	compilation for sh or sh64.

2006-11-29  Dave Brolley  <brolley@redhat.com>

	* Makefile.am (TARGETCFGS): Set based on SIDTARGET_SH_OR_SH64.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* configure: Regenerated.

2006-10-23  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (CacheCfg (const string, sid::host_int_4)):
	Initialize type as "hw-cache-buffer-" + size. Don't call
	compute_comptype.

2006-10-18  Dave Brolley  <brolley@redhat.com>

	* Contribue the following changes:

	2006-07-19  Dave Brolley  <brolley@redhat.com>

	* shCfg.h (insn_buffer): All references removed.
	(main_memory): New member of ShBoardCfg.
	* shCfg.cxx (insn_buffer): All references removed.
	(ShBoardCfg): Don't initialize icache or ocache. Assume icache and
	ocache are always created. Don't connect memory heirarchy here.
	(write_config): Do it here instead.

	2006-05-11  Dave Brolley  <brolley@redhat.com>

	* Makefile.am: Add sh support.
	* mainDynamic.cxx: Likewise.
	* shCfg.cxx: New source file.
	* shCfg.h: New source file.
	* commonCfg.cxx (GprofCfg): Set bucket-size for hw-cpu-sh*.

2006-09-27  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (profile_opt_gprof_value): Handle "gprof=<file>,cycles".

2006-09-19  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (MemCfg::set_size): Use make_numeric_attribute and pass
	std::ios::hex.
	(MapperCfg::map): Likewise.

2006-07-14  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (BoardCfg::write_config): Connect stdio_obj's eof pin to
	gloss' debug-rx-eof pin.

2006-06-26  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (GprofCfg): Connect the cpu's gprof-pc and gprof-pc-hi
	pins to our pc and p-hi pins respectively.

2006-06-20  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (BoardCfg::write_config): If there is a loader, then
	relate it to the cpu and connect the cpu's disassembly-symbol-address
	pin to the loader's function? pin.

2006-06-14  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (GprofCfg): Don't subscribe to the target scheduler.
	Connect the cpu's sample-gprof pin to our sample pin. No longer any
	relation with the target scheduler.
	(BoardCfg::write_config): Nl longer any relation between gprof and
	the target scheduler.

2006-05-11  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (CacheCfg::CacheCfg (const string name)): Now takes
	a second argument for the size of the buffer. Initialize my_size using
	the size provided. Call compute_comptype.
	(compute_comptype): Use my_size to complete "hw_cache_buffer-".
	(BoardCfg): Initalize step_insn_count. Initialize
	step_insn_count_1_required.
	(BoardCfg::write_load): Set the cpu's step-insn-count based on
	step_insn_count_1_required.
	(set_step_insn_count): Just set step_insn_count here.
	(trace_counter): Set step_insn_count_1_required.
	* commonCfg.h (CacheCfg::CacheCfg (const string name)): Now takes
	a second argument for the size of the buffer.
	(step_insn_count): New member of BoardCfg.
	(step_insn_count_1_required): New member of BoardCfg.

2006-03-27  Frank Ch. Eigler  <fche@elastic.org>

	* Makefile*., aclocal.m4: Fix libiberty[pic] references.

2005-12-16  Nathan Sidwell  <nathan@codesourcery.com>

	Second part of ms1 to mt renaming.
	* Makefile.am: Rebuilt.
	* Makefile.in: Rebuilt.
	* aclocal.m4: Rebuilt.
	* configure: Rebuilt.

2005-08-23  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (try_add_gprof): Initialize interval.
	* commonCfg.cxx (set_priority): New method of SchedCfg.
	(GprofCfg): Always call set_time, set_regular and set_priority.
	(BoardCfg::write_load): Don't connect init-seq to the dynamic
	configurator's step! pin. Call set_priority.
	* commonCfg.h (set_priority): New method of SchedCfg.
	(config_priority,gprof_priority,default_priority): New constants in
	SchedCfg.

2005-08-19  Dave Brolley  <brolley@redhat.com>

	* Contribute the following changes:

	2005-07-13  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (BoardConfig): New struct type.
	(main): Keep a vector of the boards in board_configs. Call
	set_start_config for each board after all the --wrap options have
	been seen. Call add_wrapped_component to identify each wrapped
	component to the session.
	* commonCfg.h (wrapped_components): New member of SessionCfg.
	(add_wrapped_component): New method of SessionCfg.
	(wrap_config): Likewise.
	* commonCfg.cxx (wrap_config): New method of SessionCfg.
	(profile_config): Use possible_wrap_name to obtain the component
	being wrapped so we can get its name.
	(GdbCfg::write_config): Don't connect the new-config pin or use the
	dynamic-configurator relation. Instead, use the dynamic configurator's
	client relation.
	(BoardCfg::write_config): Likewise. Relate the dynamic configurator
	to gloss.
	* baseCfg.cxx (wrap_component): Now returns AtomicCfg *.
	(possible_wrap_name): Likewise.
	(dynamic_config_for_wrapped_children): Don't connect the dynamic
	configurator's new-config pin to the components or relate the
	dynamic configurator to them. Rather, relate the components to the
	dynamic configurator using its 'client' relation.
	* baseCfg.h (wrap_component): Now returns AtomicCfg *.
	(possible_wrap_name): Likewise.

	2005-07-05  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (BoardCfg::write_load): Connect dynamic configurator's
	"reset" pin to output 2 of reset_net.
	(write_config): Set the "start-config" attribute of the dynamic
	configurator not gloss. Relate "main" to the dynamic configurator
	unconditionally. Connect the "config-error" pins of the dynamic
	configurator and gloss.

	2005-06-30  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (try_add_gprof): Make sure an argument is specified
	after the comma.

	2005-06-06  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (need_sess): Now takes 'verbose' argument. Use it
	to initialize sess->verbose. Update all callers.
	* commonCfg.h (need_core_probe): New member of SessionCfg.
	(BoardCfg::dynamic_configurator): Now public.
	* commonCfg.cxx (SessionCfg): Initialize need_core_probe.
	(profile_config): Set need_core_probe for --trace-core. Call
	use_tcl_bridge and possible_wrap_name for --wrap.
	(LoaderCfg): Don't set verbose? attribute here.
	(GlossCfg): Likewise.
	(GdbCfg::write_config): Connect the stub and the socket to the
	dynamic_configurator.
	(BoardCfg): Initialize core_probe and warmup_funcs. Connect the cpu's
	print-insn-summary pin to the shutdown sequence here.
	(BoardCfg::write_load): Connect the dynamic configurator's step! pin
	to the init-sequence's output 6. Set the core_probe's trace?
	attribute. Set the gloss and loader's verbose? attributes.
	(BoardCfg::write_config): Give the dynamic configurator its own
	subscription to sim-sched. Set the cpu's 'main' and core-probe
	relations. Connect gloss, core_probe, loader and all of the board's
	wrapped childred to the dynamic configurator. Check whether components
	are wrapped before connecting them to the dynamic configurator. Don't connect
	the cpu's print-insn-summary pin to the shutdown sequence here.
	* baseCfg.cxx (AtomicCfg): Initialize my_possibly_wrapped.
	(wrap_component): Set my_possibly_wrapped.
	(possible_wrap_name): New static method of AtomicCfg.
	(AtomicCfg::write_construct): Check my_possibly_wrapped. Set
	victim-trace? to false if only possibly wrapped.
	(dynamic_config_for_wrapped_children): New method of AggregateCfg.
	* baseCfg.h (possible_wrap_name): New static method of AtomicCfg.
	(possibly_wrapped): New method of AtomicCfg.
	(my_possibly_wrapped): New member of AtomicCfg.
	(dynamic_config_for_wrapped_children): New method of AggregateCfg.

	2005-05-29  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (usage): Document --profile-config,--profile-func,
	--warmup-func and --warmup.
	(Defs): Initialize warmup, profile_func and start_config.
	(warmup,profile_func,warmup_func,start_config): New members of Defs.
	(need_sess): Call profile_config with "sid-internal-warmup:".
	(opt_warmup,opt_warmup_func,opt_profile_func,opt_profile_config): New
	enumerators.
	(long_options): Add --profile-config,--profile-func,
	--warmup-func and --warmup.
	(main): Accumulate start_config with reconfigurable options which occur
	before the first --board. For each board call set_start_config with
	the value of start_config concatenated with the additional reconfigurable
	options specified for that --board. Call set_warmup, add_warmup_func and
	add_profile_func for each board. Handle new option enums.
	* commonCfg.h (add_profile_config): New method of SessionCfg.
	(profile_config_error, profile_opt_value, profile_opt_int_value)
	(profile_opt_gprof_value, match_profile_opt, profile_config): New
	methods of SessionCfg.
	(GprofCfg): New constructor.
	(write_load): New virtual override in BoardCfg.
	(add_profile_func, add_warmup_func, set_warmup, set_start_config): New
	methods of BoardCfg.
	(need_gprof): New member of BoardCfg.
	(start_config,warmup_funcs,profile_funcs): New members of BoardCfg.
	* commonCfg.cxx (SessionCfg): Initialize need_gprof.
	(add_profile_config): New method of SessionCfg.
	(profile_config_error, profile_opt_value, profile_opt_int_value)
	(profile_opt_gprof_value, match_profile_opt, profile_config): New
	methods of SessionCfg.
	(GprofCfg): Always add a sunscription to sim_sched. Set the
	sim-sched-event attribute.
	(GprofCfg): New constructor.
	(BoardCfg): Initialize dynamic_configurator and start_config.
	(write_load): New virtual override in BoardCfg.
	(BoardCfg::write_config): Make connections and set attributes to allow
	for dynamic configuration.
	(add_profile_func, add_warmup_func, set_warmup, set_start_config): New
	methods of BoardCfg.

2005-06-03  Jim Blandy  <jimb@redhat.com>

	* Makefile.am (LIBIBERTY): Link against the libiberty.a from
	libiberty/pic, not the non-PIC version in libiberty.
	* Makefile.in, aclocal.m4: Regenerated with Automake 1.9.5.

	* configure.in: Remove call to AC_ARG_PROGRAM, to avoid autoconf
	warnings about multiple uses.
	* configure: Regenerated with autoconf 2.59.

2005-05-10  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (~BlockingCacheCfg): New destructor.
	(BlockingCacheCfg): New constructors.
	* commonCfg.h (BlockingCacheCfg): New class.

2004-06-29  Stan Cox  <scox@redhat.com>

	* commonCfg.cxx (add_cpu):  Add eflags-set pin.

2004-04-27  Dave Brolley  <brolley@redhat.com>

	* commonCfg.h (CacheCfg::compute_comptype): Now virtual.
	(SessionCfg::get_loader): New method.

2004-04-01  Dave Brolley  <brolley@redhat.com>

	* commonCfg.h (get_size): New method of CacheCfg.
	(get_line_size): Ditto.

2004-03-22  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (main): Call add_board in place of add_child.
	* commonCfg.h (add_gdb): New method of SessionCfg.
	(add_board): Ditto.
	(write_config): Ditto.
	(board_count): New member of SessionCfg.
	(gdb_count): Ditto.
	* commonCfg.cxx (SessionCfg): Initialize board_count and gdb_count.
	(SessionCfg::write_config): New method.
	(set_gdb): Call sess->add_gdb.

2003-10-26  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (BoardCfg): Initialize 'gprof'.

2003-10-24  Dave Brolley  <brolley@redhat.com>

	* configure.in: Set program_transform_name to s,x,x, to avoid
	installing with the target prefix.
	* configure: Regenerate.

2003-10-21  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (try_load_file): Call set_loader of
	session or board as appropriate.
	* commonCfg.h (loader): New member of SessionCfg.
	(set_loader): New method of SessionCfg.
	(loader): New member of SessionCfg.
	(set_loader): New method of BoardCfg.
	* commonCfg.cxx (SessionCfg): Initialize loader.
	(set_loader): New method of SessionCfg.
	(BoardCfg): Initialize loader.
	(set_loader): New method of SessionCfg.
	(set_loader): New method of BoardCfg.

2003-06-10  Dave Brolley  <brolley@redhat.com>

	* mainDynamic.cxx (usage): Document --ulog-* options.
	(try_add_memory): Don't make the base of the mapping zero by default.
	(Defs): New members: ulog_level, ulog_mode, ulog_file.
	(option_num): New members: opt_ulog_level, opt_ulog_mode,
	opt_ulog_file.
	(long_options): Add ulog-*.
	(main): Provide defaults for ulog-*. Handle opt_ulog_*.
	* commonCfg.h (struct UlogCfg): New struct.
	(SessionCfg): Now inherits UlogCfg.
	(add_ulog_file): New method of SessionCfg.
	(ulog_map): New member of SessionCfg.
	(BoardCfg): Now inherits UlogCfg.
	* commonCfg.cxx (SessionCfg): Add a ulog mapping for "-" to ulog_map.
	(add_ulog_file): New method of SeessionCfg.
	(BoardCfg): Initialize UlogCfg.
	(add_memory): Set the base for the mapping to 0.

2003-04-16  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (final_insn_count): Set cpu attribute 'final-insn-count'.

2003-01-31  Frank Ch. Eigler  <fche@redhat.com>

	* baseCfg.cxx, commonCfg.cxx: More of the same.

2003-01-30  Frank Ch. Eigler  <fche@redhat.com>

	* baseCfg.cxx: Remove some erroneous default parameters in fn decls.

2002-05-30  Frank Ch. Eigler  <fche@redhat.com>

	* mainDynamic.cxx (main): Add new "--rc" option to control passing
	cfgroot stop-code as sid process exit rc.

2002-04-29  Graydon Hoare  <graydon@redhat.com>

	* mainDynamic.cxx: Make step_insn_count a string.

2002-04-29  Graydon Hoare  <graydon@redhat.com>

	* commonCfg.h (Mapping): New class.
	* commonCfg.cxx (MapperCfg): Update to use Mapping objects.
	* mainDynamic.cxx (try_add_memory): Use Mapping objects.
	(Defs): Make step_insn_count a defaultable option.

2002-04-23  Graydon Hoare  <graydon@redhat.com>

	* mainDynamic.cxx (try_add_memory): Force mappings to base address
	0 in extra memory region, to ignore transparent / basic mapper
	distinction in board-specific code.

2002-04-15  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (struct MemCfg_impl): New struct.
	(MemCfg_impl::get_by_name): New function.
	(MemCfg::MemCfg): Add 'this' to name_map.
	* commonCfg.h (MemCfg_impl::get_by_name): New function.

2002-04-09  Dave Brolley  <brolley@redhat.com>

	* commonCfg.cxx (add_mapping): New variant.
	* commonCfg.h (add_mapping): New variant.

2002-03-25  Graydon Hoare  <graydon@redhat.com>

	* mainDynamic.cxx (try_load_file): Support "all-cpu" sub-option
	to --load option.
	* commonCfg.h (CpuCfg::get_all): Likewise.
	* commonCfg.cxx (CpuCfg::get_all): Likewise.

2002-03-11  Graydon Hoare  <graydon@redhat.com>

	* mainDynamic.cxx (main): Add opt_gloss.
	* commonCfg.cxx (BoardCfg::use_gloss): Define.
	* commonCfg.h: Likewise.

2002-02-22  Graydon Hoare  <graydon@redhat.com>

	* Makefile.am (INCLUDE): Add -I$(srcdir)/../../../include.
	* Makefile.in: Regenerate.
	* mainDynamic.cxx: Un-guard #include <getopt.h>, getting it
	from libiberty now.

2002-02-08  Graydon Hoare  <graydon@redhat.com>

	* baseCfg.cxx: New file.
	* baseCfg.h: New file.
	* commonCfg.cxx: New file.
	* commonCfg.h: New file.
	* mainDynamic.cxx: Complete rewrite, incorporate contents of
	configrun-sid.in perl script.
	* Makefile.am (sid): Add new files to target.
	* Makefile.in: Regenerate.

2001-10-05  Frank Ch. Eigler  <fche@redhat.com>

	* mainDynamic.cxx (version): New function.  Use SID_VERSION from
	new version.h file.
	(main): Support "-v" option to print this information.
	* Makefile.am (sid_DEPENDENCIES): List version.h.
	* configure, Makefile.in: Regenerated.

2001-09-18  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (NEARBY_LIBS, NEARBY_DEPS_LIBS): Add bochs/libx86.la.
	* Makefile.in: Regenerated.

2001-07-24  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (ALLFAMLIBS*): New macros for family-specific
	component libraries.
	* configure.in: Call CY_SIDTARGET_CHECK.
	* Makefile.in, aclocal.m4, configure: Regenerated.

2001-06-26  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Refer to $srcdir.
	* Makefile.in: Regenerated.

2001-06-19  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (NEARBY_LIBS, NEARBY_DEPS_LIBS): Add libcache.la.
	* Makefile.in: Regenerated.

2001-03-21  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (NEARBY_DEPS_LIBS): New macro.
	(sid_DEPENDENCIES, sid_LDADD): Use it.
	* Makefile.in: Regenerated.

2001-03-21  Ben Elliston  <bje@redhat.com>

	* Makefile.in: Regenerate.

2001-03-13  Frank Ch. Eigler  <fche@redhat.com>

	* configure.in (AC_LIBTOOL_DLOPEN): Define option.
	* configure: Regenerated.

2001-02-28  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (NEARBY_LIBS): Enumerate component libraries for
	static linking.
	(sid_LDFLAGS): Correct export-symbols-regex param to
	include tcl bridge component.  Use $(NEARBY_LIBS).
	* Makefile.in: Regenerated.

2001-02-05  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (sid_LDFLAGS): Add export-symbols-regex parameter to
	shrink the list of static symbols in the dlpreload case.
	* Makefile.in: Regenerated.

2000-11-16  Frank Ch. Eigler  <fche@redhat.com>

	* Makefile.am (AM_CXXFLAGS): Add -DSID_STATIC conditionally.
	* mainDynamic.cxx (lt_preloaded_symbols,!SID_STATIC): Make stub table.
	* Makefile.in: Regenerated.

2000-11-15  Jeff Johnston  <jjohnstn@redhat.com>

	* configure: Regenerated.
	* aclocal.m4: Ditto.
	* Makefile.in: Ditto.

2000-07-26  Frank Ch. Eigler  <fche@redhat.com>

	* mainDynamic.cxx (main): Print usage message if sid is invoked with
	no arguments.

2000-07-26  Frank Ch. Eigler  <fche@redhat.com>

	* configure.in: Define SID_STATIC automake var if --disable-shared.
	* Makefile.am: If SID_STATIC, --dlpreopen all nearby component
	libraries when linking sid executable.
	* configure, Makefile.in: Regenerated.

2000-05-22  Ben Elliston  <bje@redhat.com>

	* Makefile.in: Regenerate.

2000-02-08  Frank Ch. Eigler  <fche@redhat.com>

	* mainDynamic.cxx (main): Delete cfgroot even on __CYGWIN__.

2000-01-12  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (usage): New function.
	(main): Use getopt.  Process several new command line options.
	* configure.in: Look for getopt.h.
	* configure, config.in: Regenerated.

1999-12-29  Frank Ch. Eigler  <fche@cygnus.com>

	* configure.in: Don't look redundantly for libstdc++.
	* configure, config.in: Regenerated.

1999-11-23  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (sid_{pre,post}_{configure,run}): New debugging
	hook functions.
	(main): Call them at the appropriate points.  Drive output pins with
	sentinel values.
	(sid_breakpoint): Zap.

1999-10-19  Frank Ch. Eigler  <fche@cygnus.com>

	* Makefile.in: Regenerated.
	* configure: Regenerated.

1999-09-16  Frank Ch. Eigler  <fche@cygnus.com>

	* Makefile.am (ACLOCAL_AMFLAGS): Define.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated.
	* configure: Regenerated.

1999-08-16  Ian Carmichael  <iancarm@cygnus.com>

	* mainDynamic.cxx: sid::component members renamed.

1999-08-09  Frank Ch. Eigler  <fche@cygnus.com>

	* sid.conf.in: Deleted.
	* configure.in: Forget about it.
	* configure: Regenerated.
	* Makefile.in: Regenerated.

1999-07-29  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main): Don't delete cfgroot on __CYGWIN__.

1999-06-23  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (config_component_library): Don't DLLIMPORT
	symbol from statically linked library.

1999-06-09  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main): Delete cfgroot via its component_library.

1999-06-09  Ian Carmichael  <iancarm@cygnus.com>

	* mainDynamic.cxx (main): Delete cfgroot component before exit.

1999-06-08  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main): Updated with new component type names.
	* sid.conf.in: Ditto.

1999-05-19  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx: Don't #include "compConfig.h".
	* Makefile.am (INCLUDES): Don't include -I.../cfgroot.
	* Makefile.in: Regenerated.

1999-05-18  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main): Use cfgroot's "config-file!" attribute
	to load configuration file.

1999-05-13  Frank Ch. Eigler  <fche@cygnus.com>

	* aclocal.m4: Regenerated.

1999-05-13  Ron Unrau  <runrau@cygnus.com>

	* mainDynamic.cxx: Configure via API vs pin
	* Makefile.am: includes now include cfgroot
	* Makefile.in: regenerate

1999-05-04  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx: DLLIMPORT config_component_library.
	(main): Drive cfgroot's <<run>> pin without value.

	* Makefile.am: Link in libconfig.la [cfgroot] statically.
	* configure.in: Look for AR tool.
	* Makefile.in: Regenerated.
	* aclocal.m4: Regenerated for new libtool.
	* configure: Regenereated.

	* sid.conf.in: Use .la component DSO names.

1999-04-18  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx: Don't #include Scheduler.h.

1999-04-19  Doug Evans  <devans@casey.cygnus.com>

	* mainDynamic.cxx (sid_breakpoint): New function.

1999-03-24  Frank Ch. Eigler  <fche@cygnus.com>

	* configure.in: Use new AC_CONFIG_AUX_DIR.  Stop looking for -ldl.
	* configure: Regenerated.
	* Makefile.in: Regenerated.

1999-03-10  Ron Unrau  <runrau@cygnus.com>

	* mainDynamic.cxx: incorporate revised pin API

1999-02-26  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main_component): Remove all traces.
	(config_parser): Ditto.
	(main): Use external cfgroot_component instead of above.
	* Makefile.am: Refer to ../compConfig for linked-in cfgroot_component.
	* Makefile.in: Rebuilt.

1999-02-21  Ron Unrau  <runrau@cygnus.com>

	* Use Scheduler

1999-02-12  Frank Ch. Eigler  <fche@cygnus.com>

	* Makefile.am: Switch to foreign mode.  Adjust for automake 1.4.
	* configure.in: Adjust for autoconf 2.13.
	* Makefile.in: Rebuilt.
	* aclocal.m4: Rebuilt.
	* configure: Rebuilt.
	* config.in: Rebuilt.

1999-02-02  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main_component): Add "running" pin to indicate
	post-configuration state.  Use fixed_pin_map mix-in.
	(set_attribute): Read back attribute values just written, to confirm
	acceptance.

1998-12-23  Frank Ch. Eigler  <fche@cygnus.com>

	* Makefile.am (INCLUDES): Added . and ../include.
	* configure.in: Removed compulsory checks.  Use local config.h.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.
	* config.in: Generated new file
	* acconfig.m4: New file.
	* mainDynamic.cxx (register_la): Load libtool-style ".la" DSO.
	Experimental.
	(parse_command): Call it for "dso" command.

1998-12-18  Frank Ch. Eigler  <fche@cygnus.com>

	* configure.in: Look for strstream.h.
	* configure: Rebuilt.
	* mainDynamic.cxx (consume): Chomp inter-word space individually.

1998-12-17  Frank Ch. Eigler  <fche@cygnus.com>

	* mainDynamic.cxx (main_component): Use new stub functions from
	sidcomputil.h to mix in unused sub-APIs.
	(register_dso): Return true for success.
	(instantiate_component): Return true for success.
	(connect_pin): Return true for success.
	(connect_bus): Return true for success.
	(set_attribute): New function.
	(config_parser): New class for parsing configuration file.  Use
	"->"/"<-"/"<->" for pin connection directions.  Support attribute
	setting.
	(main): Run simulator only if configuration was successful.
	(sid.conf.in): Removed memory test parts.

	* aclocal.m4: New file to enable local configuration.
	* configure.in: Make script self-contained.
	* Makefile.in: Rebuilt.
	* configure: Rebuilt.

